name: Build & push Docker image to DockerHub
on:
  push:
    branches:
      - "main"  
env:
  username: ${{secrets.DOCKERHUB_USERNAME}}    
  password: ${{secrets.DOCKERHUB_PASSWORD}}    
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Cache the dependices
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: value-cache
        restore-keys: |
          value-cache
    - name: Upload test coverage & Artifact
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage
        path: ./coverage
    - name: Upload the build folder
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: ./build
    - name: Download the artifact
      uses: actions/download-artifact
      with:
        name: |
         coverage
         build        

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        DOCKERHUB_REGISTRY: "dogra21703/sohan"
        IMAGE_TAG: ${{ github.sha }}
        TAG: latest
      run: |
        docker build -t $DOCKERHUB_REGISTRY:$IMAGE_TAG .
        docker image tag $DOCKERHUB_REGISTRY:$IMAGE_TAG $DOCKERHUB_REGISTRY:$TAG
        docker login -u $username -p $password
        docker push $DOCKERHUB_REGISTRY:$IMAGE_TAG
        docker push  $DOCKERHUB_REGISTRY:$TAG
    - name: Sending Slack notification
      if: always()
      uses: docker://technosophos/slack-notify
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACKWEBHOOK }}
        SLACK_MESSAGE: 'Hi Team, This is to inform you that Last NodeJs Worflow was ${{ job.status }}'
            
name: Build & push Docker image to ECR
on:
  push:
    branches:
      - "main"
env:
  AWS_REGION:   us-west-2                         
  ECR_REPOSITORY_NAME: github-test-action         
  CONTAINER_NAME: github-action              
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG .
        docker image tag $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG
        docker push  $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$TAG
    - name: Sending Slack notification
      if: always()
      uses: docker://technosophos/slack-notify
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACKWEBHOOK }}
        SLACK_MESSAGE: 'Hi Team, This is to inform you that Last NodeJs Worflow was ${{ job.status }}'
              